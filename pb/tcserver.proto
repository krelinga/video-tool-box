syntax = "proto3";

option go_package = "github.com/krelinga/video-tool-box/pb";

message HelloWorldRequest {
    string in = 1;
}

message HelloWorldReply {
    string out = 1;
    int64 file_size = 2;
}

message StartAsyncTranscodeRequest {
    // Must be unique among all running transcodes on the server.
    string name = 1;

    string in_path = 2;
    string out_path = 3;

    // If set, the name of the profile to use.
    string profile = 4;
}

message StartAsyncTranscodeReply {
}

message CheckAsyncTranscodeRequest {
    // Must match the name given in StartAsyncTranscodeRequest.
    string name = 1;
}

enum TranscodeState {
    UNKNOWN = 0;
    NOT_STARTED = 4;
    IN_PROGRESS = 1;
    DONE = 2;
    FAILED = 3;
}

message CheckAsyncTranscodeReply {
    TranscodeState state = 1;
    string error_message = 2;
    // Only set if state is STATE_IN_PROGRESS
    string progress = 3;
}

message StartAsyncShowTranscodeRequest {
    string name = 1;

    string in_dir_path = 2;
    string out_parent_dir_path = 3;

    string profile = 4;
}

message StartAsyncShowTranscodeReply {
}

message CheckAsyncShowTranscodeRequest {
    // Must match the name given in StartAsyncTranscodeRequest.
    string name = 1;
}

message CheckAsyncShowTranscodeReply {
    message File {
        string episode = 1;
        TranscodeState state = 2;
        string error_message = 3;
        // Only set if state is STATE_IN_PROGRESS
        string progress = 4;
    }
    repeated File file = 1;
    // State & error of anything not related to individual files.
    TranscodeState state = 2;
    string error_message = 3;
}

service TCServer {
    rpc HelloWorld(HelloWorldRequest) returns (HelloWorldReply) {}

    rpc StartAsyncTranscode(StartAsyncTranscodeRequest) returns (StartAsyncTranscodeReply) {}
    rpc CheckAsyncTranscode(CheckAsyncTranscodeRequest) returns (CheckAsyncTranscodeReply) {}

    rpc StartAsyncShowTranscode(StartAsyncShowTranscodeRequest) returns (StartAsyncShowTranscodeReply) {}
    rpc CheckAsyncShowTranscode(CheckAsyncShowTranscodeRequest) returns (CheckAsyncShowTranscodeReply) {}
}
